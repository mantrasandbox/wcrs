name: CI - Build Backend Services

on:
  workflow_dispatch:
  push:
    branches:
      - dev
      #- main
    paths:
      - services/backend/** # Trigger only when backend files change

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
  DOCKER_HUB_REPO_PREFIX: mantrasandbox/  # Change this

jobs:
  build-backend:
    runs-on: ubuntu-latest
#    services:
#      postgres:
#        image: postgres:14.5
#        env:
#          POSTGRES_USER: wcrs
#          POSTGRES_PASSWORD: wcrs
#          POSTGRES_DB: employee
#        ports:
#          - 5433:5432
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            */target/**
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Find and build all Maven projects
        run: |
          echo "Discovering all pom.xml files in services/..."
          find services/ -name pom.xml | while read pom; do
          echo "Building project in $(dirname $pom)..."
          mvn -B package --file "$pom" -Dmaven.test.skip=true -Dmaven.repo.local=$HOME/.m2/repository
          done

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: |
            image=moby/buildkit:master
          buildkitd-config: |
            [worker.oci]
              enabled = true
              max-parallelism = 4
            [worker.containerd]
              enabled = false

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_TOKEN }}

      - name: Build and push Docker images with full caching
        run: |
          # First prepare Maven cache
          mkdir -p .m2-cache
          cp -r ~/.m2/repository .m2-cache/
          
          find services/ -name pom.xml | while read pom; do
            service_dir=$(dirname "$pom")
            service_name=$(basename "$service_dir")
            jar_file=$(find "$service_dir/target" -name "*.jar" ! -name "*original*" | head -n 1)
          
            if [ -f "$jar_file" ]; then
              echo "Building Docker image for $service_name..."
              docker buildx build \
                --push \
                --tag "${{ env.DOCKER_HUB_REPO_PREFIX }}$service_name:latest" \
                --cache-to type=local,dest=/tmp/.buildx-cache \
                --cache-from type=local,src=/tmp/.buildx-cache \
                --build-arg JAR_FILE=$(basename "$jar_file") \
                --build-context maven-cache=./.m2-cache \
                -f "$service_dir/Dockerfile" \
                "$service_dir"
            else
              echo "No jar file found for $service_name in $service_dir/target/"
            fi
          done