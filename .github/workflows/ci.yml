name: CI - Build Backend Services

on:
    push:
        branches:
            - dev
            - main
        #paths:
            #- services/**

env:
    DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
    DOCKER_HUB_REPO_PREFIX: mantrasandbox/  # Change this

jobs:
    build:
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres:14.5
                env:
                    POSTGRES_USER: wcrs
                    POSTGRES_PASSWORD: wcrs
                    POSTGRES_DB: employee
                ports:
                    - 5433:5432
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up JDK 21
              uses: actions/setup-java@v3
              with:
                  distribution: 'temurin'
                  java-version: '21'
                  cache: 'maven'

            - name: Find and build all Maven projects
              run: |
                 echo "Discovering all pom.xml files in services/..."
                 find services/ -name pom.xml | while read pom; do
                 echo "Building project in $(dirname $pom)..."
                 mvn -B package --file "$pom" -Dmaven.test.skip=true
                 done

            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ env.DOCKER_USERNAME }}
                  password: ${{ env.DOCKER_TOKEN }}

            - name: Build and push Docker images
              run: |
                find services/ -name pom.xml | while read pom; do
                  service_dir=$(dirname "$pom")
                  service_name=$(basename "$service_dir")
                  jar_file=$(find "$service_dir/target" -name "*.jar" ! -name "*original*" | head -n 1)
                
                  if [ -f "$jar_file" ]; then
                    echo "Building Docker image for $service_name..."
                    docker build -t "${{ env.DOCKER_HUB_REPO_PREFIX }}$service_name:latest" \
                      --build-arg JAR_FILE=$(basename "$jar_file") \
                      -f "$service_dir/Dockerfile" "$service_dir"
                
                    echo "Pushing to Docker Hub..."
                    docker push "${{ env.DOCKER_HUB_REPO_PREFIX }}$service_name:latest"
                  else
                    echo "No jar file found for $service_name in $service_dir/target/"
                  fi
                done