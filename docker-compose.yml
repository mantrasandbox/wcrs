services:

  postgres:
    container_name: wcrs-db
    image: postgres
    environment:
      POSTGRES_USER: wcrs
      POSTGRES_PASSWORD: wcrs
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgres:/data/postgres
    ports:
      - 5432
    networks:
      - wcrs-net
    restart: unless-stopped

  pgadmin:
    container_name: ms_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - 80
    networks:
      - wcrs-net
    restart: unless-stopped
    depends_on:
      - postgres

  configserver:
    container_name: config-server
    image: mantrasandbox/config-server
    ports:
      - 8080
    networks:
      - wcrs-net
    restart: unless-stopped

  discovery:
    container_name: discovery
    image: mantrasandbox/discovery
    ports:
      - 8761
    networks:
      - wcrs-net
    restart: unless-stopped
    depends_on:
      - configserver

  api-gateway:
    container_name: api-gateway
    image: mantrasandbox/api-gateway
    ports:
      - 4040:4040
    networks:
      - wcrs-net
      - wcrs-logging
    restart: unless-stopped
    depends_on:
      - configserver


  employee:
    container_name: employee
    image: mantrasandbox/employee
    ports:
      - 4000
    networks:
      - wcrs-net
    restart: unless-stopped
    depends_on:
      - configserver

  employee-ui:
    container_name: employee-ui
    image: mantrasandbox/employee-ui
    ports:
      - 3000
    networks:
      - wcrs-net
    restart: unless-stopped
    depends_on:
      - employee

  admin:
    container_name: admin
    image: mantrasandbox/wcrs-admin
    ports:
      - 9090
    networks:
      - wcrs-net
    restart: unless-stopped

  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:8.12.2
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - 5000
      - 9600
    networks:
      - wcrs-net
      - wcrs-logging
    restart: unless-stopped
    depends_on:
      - elasticsearch

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - 9200
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
    networks:
      - wcrs-logging
    restart: unless-stopped

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.12.2
    ports:
      - 5601
    environment:
      - ELASTICSEARCH_HOSTS = http://elasticsearch:9200
    networks:
      - wcrs-logging
    restart: unless-stopped
    depends_on:
      - elasticsearch


networks:
  wcrs-net:
    driver: bridge
  wcrs-logging:
    driver: bridge

volumes:
  postgres:
  es_data:
  pgadmin: